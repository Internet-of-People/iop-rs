name: Commit checks
on: [push, pull_request]
jobs:
  build:
    name: Build/test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: false
      - uses: actions-rs/cargo@v1
        with:
          command: check
      - uses: actions-rs/cargo@v1
        with:
          command: test
  binaries:
    name: Compile FFI binaries for ${{matrix.triple.name}}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        triple:
          - { name: 'Linux-x86', target: 'x86_64-unknown-linux-gnu', use-cross: false }
          - { name: 'Android-ARMv8', target: 'aarch64-linux-android', use-cross: true }
          - { name: 'Android-x86_64', target: 'x86_64-linux-android', use-cross: true }
          - { name: 'Android-x86', target: 'i686-linux-android', use-cross: true }
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/cargo@v1
        with:
          use-cross: ${{matrix.triple.use-cross}}
          command: build
          args: --target ${{matrix.triple.target}} --release
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.triple.name}}
          path: |
            target/${{matrix.triple.target}}/release/libiop_sdk_ffi.so
  wasm:
    name: Compile npm package ${{matrix.package}}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        package:
          - node-wasm
          - sdk-wasm
    steps:
      - uses: actions/checkout@v2
      - name: Install prerequisites
        run: sudo apt install libssh-dev clang jq binaryen
      - name: Install wasm-pack
        run: cargo install wasm-pack
      - name: Run wasm-pack
        run: ./build.sh
        working-directory: ./${{matrix.package}}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.package}}
          path: |
            ${{matrix.package}}/pkg/
          if-no-files-found: error
